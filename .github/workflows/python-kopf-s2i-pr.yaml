name: s2i-python-kopf-pr
on:
  pull_request:
    paths:
      - '**'
jobs:
  test:
    env:
      context: .
      image_name: python-kopf-s2i
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Check and verify version.json
        id: check_version
        run: |
          # version.json must have semantic version: vMAJOR.MINOR.PATCH
          VERSION=$(jq -r '.version' ${context}/version.json)
          if [[ ! $VERSION =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
              echo "${context}/version.json does not contain semantic version, vMAJOR.MINOR.PATCH"
              exit 1
          fi
          echo ::set-output name=VERSION::$VERSION
          sed -i -e "s/^FROM .*/FROM ${{ env.image_name }}:${VERSION}/" ${context}/example/Dockerfile
      - name: Build s2i image
        uses: docker/build-push-action@v1
        with:
          path: ${{ env.context }}
          push: false
          repository: ${{ env.image_name }}
          tags: ${{ steps.check_version.outputs.VERSION }}
      - name: Build example from s2i image
        uses: docker/build-push-action@v1
        with:
          path: ${{ env.context }}/example
          push: false
          repository: ${{ env.image_name }}-example
          tags: ${{ steps.check_version.outputs.VERSION }}
      #- name: Test image
      #  run: |
      #    echo "Running: docker run --entrypoint '/bin/sh' ${image_name}:${{ steps.check_version.outputs.VERSION }} -c 'wget --version'"
      #    docker run --entrypoint '/bin/sh' ${image_name}:${{ steps.check_version.outputs.VERSION }} -c 'wget --version'
      #    echo "Running: docker run --entrypoint '/bin/sh' ${image_name}:${{ steps.check_version.outputs.VERSION }} -c 'gitlab-runner --version'"
      #    docker run --entrypoint '/bin/sh' ${image_name}:${{ steps.check_version.outputs.VERSION }} -c 'gitlab-runner --version'
